AWSTemplateFormatVersion: 2010-09-09
Parameters:
  BranchName:
    Description: GitHub branch name
    Type: String
    Default: master
  RepositoryName:
    Description: GitHub repository name
    Type: String
    Default: test
  GitHubOwner:
    Type: String
  GitHubSecret:
    Type: String
    NoEcho: true
  GitHubOAuthToken:
    Type: String
    NoEcho: true
  ServiceName:
    Description: Name for this service; used in pipeline names
    Type: String
    Default: HelloWorld
  CodeBuildEnvironment:
    Type: String
    Default: "eb-python-2.6-amazonlinux-64:2.1.6"
    Description: Docker image to use for CodeBuild container - Use http://amzn.to/2mjCI91 for reference
  BuilderVPC:
    Type: AWS::EC2::VPC::Id
    Description: VPC ID that AMI Builder will use to launch temporary resource
  BuilderPublicSubnet:
    Type: AWS::EC2::Subnet::Id
    Description: Public Subnet ID that AMI Builder will use to launch temporary resource

Resources:

  #############
  # Pipeline  #
  #############

  BuildArtifactsBucket:
    Type: AWS::S3::Bucket

  BuildArtifactsBucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref BuildArtifactsBucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: DenyUnEncryptedObjectUploads
            Effect: Deny
            Principal: '*'
            Action: 's3:PutObject'
            Resource: !Join 
              - ''
              - - !GetAtt 
                  - BuildArtifactsBucket
                  - Arn
                - /*
            Condition:
              StringNotEquals:
                's3:x-amz-server-side-encryption': 'aws:kms'
          - Sid: DenyInsecureConnections
            Effect: Deny
            Principal: '*'
            Action: 's3:*'
            Resource: !Join 
              - ''
              - - !GetAtt 
                  - BuildArtifactsBucket
                  - Arn
                - /*
            Condition:
              Bool:
                'aws:SecureTransport': false
  
  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Path: "/managed/"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/PowerUserAccess"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action: "sts:AssumeRole"
            Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
      Policies:
        - PolicyName: CodeBuildAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Sid: "CodeBuildToCWL"
                Effect: Allow
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource:
                  - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${ServiceName}_build"
                  - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${ServiceName}_build:*"
              - Sid: "CodeBuildToS3ArtifactRepo"
                Effect: Allow
                Action:
                  - "s3:GetObject"
                  - "s3:GetObjectVersion"
                  - "s3:PutObject"
                Resource: !Sub "arn:aws:s3:::${BuildArtifactsBucket}/*"

  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub "${ServiceName}_AMI_provisioning_build"
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: !Sub "aws/codebuild/${CodeBuildEnvironment}"
        EnvironmentVariables:
          - Name: BUILD_OUTPUT_BUCKET
            Value: !Ref BuildArtifactsBucket
          - Name: BUILD_VPC_ID
            Value: !Ref BuilderVPC
          - Name: BUILD_SUBNET_ID
            Value: !Ref BuilderPublicSubnet
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Source:
        Type: CODEPIPELINE

  PipelineWebhook:
    Type: 'AWS::CodePipeline::Webhook'
    Properties:
      Authentication: GITHUB_HMAC
      AuthenticationConfiguration:
        SecretToken: !Ref GitHubSecret
      Filters:
        - JsonPath: $.ref
          MatchEquals: 'refs/heads/{Branch}'
      TargetPipeline: !Ref Pipeline
      TargetAction: SourceAction
      Name: PipelineWebhook
      TargetPipelineVersion: !GetAtt 
        - Pipeline
        - Version
      RegisterWithThirdParty: true

  PipelineExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      Path: "/managed/"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action: "sts:AssumeRole"
            Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
      Policies:
        - PolicyName: CodePipelineS3ArtifactAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Action:
                  - "s3:GetObject"
                  - "s3:GetObjectVersion"
                  - "s3:GetBucketVersioning"
                  - "s3:PutObject"
                Effect: Allow
                Resource:
                  - !Sub "arn:aws:s3:::${BuildArtifactsBucket}"
                  - !Sub "arn:aws:s3:::${BuildArtifactsBucket}/*"
        - PolicyName: CodePipelineBuildAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Action:
                  - "codebuild:StartBuild"
                  - "codebuild:StopBuild"
                  - "codebuild:BatchGetBuilds"
                Effect: Allow
                Resource: !GetAtt CodeBuildProject.Arn
                
  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Location: !Ref BuildArtifactsBucket
        Type: S3
      Name: !Sub ${ServiceName}_AMI_provisioning_pipeline
      RoleArn: !GetAtt PipelineExecutionRole.Arn
      Stages:
        - Name: Source
          Actions:
            - Name: SourceAction
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: 1
                Provider: GitHub
              OutputArtifacts:
                - Name: SourceZip
              Configuration:
                Owner: !Ref GitHubOwner
                Repo: !Ref RepositoryName
                Branch: !Ref BranchName
                OAuthToken: !Ref GitHubOAuthToken
                PollForSourceChanges: false
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: CodeBuild
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              Configuration:
                ProjectName: !Ref CodeBuildProject
              InputArtifacts:
                - Name: SourceZip
              OutputArtifacts:
                - Name: BuiltZip
              RunOrder: 2
Outputs:
  ArtifactRepository:
    Description: S3 Bucket for Pipeline and Build Artifacts
    Value: !Ref BuildArtifactsBucket

  CodePipelineServiceRole:
    Description: CodePipeline IAM Service Role
    Value: !GetAtt PipelineExecutionRole.Arn
